---

- name: Clear platform variables
  ansible.builtin.set_fact:
    __defaults_search_order:
      - "defaults/{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
      - "defaults/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "defaults/{{ ansible_distribution }}.yml"
      - "defaults/family-{{ ansible_os_family }}-{{ ansible_distribution_version }}.yml"
      - "defaults/family-{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
      - "defaults/family-{{ ansible_os_family }}.yml"

- name: Select the appropiate variable file
  ansible.builtin.set_fact:
    __defaults_vars: "{{ item }}"
  with_first_found: "{{ __defaults_search_order }}"

- name: Create list and dict of all hosts  # noqa var-spacing
  ansible.builtin.set_fact:
    __defaults_files_list: >-
      {{ (__defaults_files_list | default([])) + [{'name': inventory_hostname, 'defaults': hostvars[item]['__defaults_vars']}] }}
    __defaults_files_dict: >-
      {{ __defaults_files_dict | default({}) | combine({item: {'defaults': hostvars[item]['__defaults_vars']}}) }}
  loop: "{{ ansible_play_hosts }}"

- name: Execute role again using selected defaults  # noqa jinja[invalid]
  ansible.builtin.include_role:
    name: "{{ role_name }}"
    defaults_from: "{{ defaults }}"
    tasks_from: "main1.yml"
  loop: "{{ __defaults_files_list | json_query('[].defaults') | unique }}"
  loop_control:
    loop_var: defaults
  when: defaults == __defaults_files_dict[inventory_hostname]['defaults']
